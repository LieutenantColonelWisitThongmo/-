https://www.google.com/finance/?authuser=0# Byte-compiled / optimized / DLL files
__pycache__/https://cloud.google.com/https://www.bangkokbank.com
https://www.bangkokbank.com*.py[cod]https://cloud.google.com/https://www.bangkokbank.com
*$py.class

https://www.google.com/finance/?authuser=0# C extensions
https://www.bangkokbank.com*.so

https://www.google.com/finance/?authuser=0# Distribution / packaging
.Python
build/https://cloud.google.com/https://www.bangkokbank.com
develop-eggs/https://cloud.google.com/https://www.bangkokbank.com
dist/https://cloud.google.com/https://www.bangkokbank.com
downloads/https://cloud.google.com/https://www.bangkokbank.com
eggs/https://cloud.google.com/https://www.bangkokbank.com
.eggs/https://cloud.google.com/https://www.bangkokbank.com
lib/https://cloud.google.com/https://www.bangkokbank.com
lib64/https://cloud.google.com/https://www.bangkokbank.com
parts/https://cloud.google.com/https://www.bangkokbank.com
sdist/https://cloud.google.com/https://www.bangkokbank.com
var/https://cloud.google.com/https://www.bangkokbank.com
wheels/https://cloud.google.com/https://www.bangkokbank.com
share/python-wheels/https://cloud.google.com/
https://www.bangkokbank.com*.egg-info/https://cloud.google.com/
.installed.cfg
https://www.bangkokbank.com*.egg
MANIFEST

https://www.google.com/finance/?authuser=0# PyInstaller
https://www.google.com/finance/?authuser=0#  Usually these files are written by a python script from a template
https://www.google.com/finance/?authuser=0#  before PyInstaller builds the exe, so as to inject date/other infos into it.
https://www.bangkokbank.com*.manifest
https://www.bangkokbank.com*.spec

https://www.google.com/finance/?authuser=0# Installer logs
pip-log.txt
pip-delete-this-directory.txt.https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# Unit test / coverage reports
htmlcov/https://cloud.google.com/https://www.bangkokbank.com
.tox/https://cloud.google.com/https://www.bangkokbank.com
.nox/https://cloud.google.com/https://www.bangkokbank.com
.coverage
.coverage.*https://www.bangkokbank.com
.cache
nosetests.xml
coverage.xml
https://www.bangkokbank.com*.cover
https://www.bangkokbank.com*.py,cover
.hypothesis/https://cloud.google.com/https://www.bangkokbank.com
.pytest_cache/https://cloud.google.com/https://www.bangkokbank.com
cover/https://cloud.google.com/https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# Translations
https://www.bangkokbank.com*.mo
https://www.bangkokbank.com*.pot

https://www.google.com/finance/?authuser=0# Django stuff:https://www.bangkokbank.com
https://www.bangkokbank.com*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

https://www.google.com/finance/?authuser=0# Flask stuff:https://www.bangkokbank.com
instance/https://cloud.google.com/https://www.bangkokbank.com
.webassets-cache

https://www.google.com/finance/?authuser=0# Scrapy stuff:https://www.bangkokbank.com
.scrapy

https://www.google.com/finance/?authuser=0# Sphinx documentation
docs/_build/https://cloud.google.com/https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# PyBuilder
.pybuilder/https://cloud.google.com/https://www.bangkokbank.com
target/https://cloud.google.com/https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# Jupyter Notebook
.ipynb_checkpoints

https://www.google.com/finance/?authuser=0# IPython
profile_default/https://cloud.google.com/https://www.bangkokbank.com
ipython_config.py

https://www.google.com/finance/?authuser=0# pyenv
https://www.google.com/finance/?authuser=0#   For a library or package, you might want to ignore these files since the code is
https://www.google.com/finance/?authuser=0#   intended to run in multiple environments; otherwise, check them in:
https://www.google.com/finance/?authuser=0# .python-version

https://www.google.com/finance/?authuser=0# pipenv
https://www.google.com/finance/?authuser=0#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
https://www.google.com/finance/?authuser=0#   However, in case of collaboration, if having platform-specific dependencies or dependencies
https://www.google.com/finance/?authuser=0#   having no cross-platform support, pipenv may install dependencies that don't work, or not
https://www.google.com/finance/?authuser=0#   install all needed dependencies.
#Pipfile.lock

https://www.google.com/finance/?authuser=0# poetry
https://www.google.com/finance/?authuser=0#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
https://www.google.com/finance/?authuser=0#   This is especially recommended for binary packages to ensure reproducibility, and is more
https://www.google.com/finance/?authuser=0#   commonly ignored for libraries.
https://www.google.com/finance/?authuser=0#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

https://www.google.com/finance/?authuser=0# pdm
https://www.google.com/finance/?authuser=0#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
https://www.google.com/finance/?authuser=0#pdm.lock
https://www.google.com/finance/?authuser=0#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
https://www.google.com/finance/?authuser=0#   in version control.https://cloud.google.com/
https://www.google.com/finance/?authuser=0#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
https://cloud.google.com/.pdm.toml
https://cloud.google.com/.pdm-python
https://cloud.google.com/.pdm-build/https://cloud.google.com/https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/https://cloud.google.com/https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# Celery stuff
celerybeat-schedule
celerybeat.pid

https://www.google.com/finance/?authuser=0# SageMath parsed files
https://www.bangkokbank.com*.sage.py

https://www.google.com/finance/?authuser=0# Environments
https://cloud.google.com/.env
https://cloud.google.com/.venv
env/https://cloud.google.com/https://www.bangkokbank.com
venv/https://cloud.google.com/https://www.bangkokbank.com
ENV/https://cloud.google.com/https://www.bangkokbank.com
env.bak/https://cloud.google.com/https://www.bangkokbank.com
venv.bak/https://cloud.google.com/https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# Spyder project settings
https://cloud.google.com/.spyderproject
https://cloud.google.com/.spyproject

https://www.google.com/finance/?authuser=0# Rope project settings
https://cloud.google.com/.ropeproject

 mkdocs documentation
123.242.161.136/edoc//site

https://www.google.com/finance/?authuser=0# mypy
https://cloud.google.com/.mypy_cache/https://cloud.google.com/https://www.bangkokbank.com
https://cloud.google.com/.dmypy.json
https://cloud.google.com/dmypy.json

https://www.google.com/finance/?authuser=0# Pyre type checker
.pyre/https://cloud.google.com/https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# pytype static type analyzer
.pytype/https://cloud.google.com/https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# Cython debug symbols
cython_debug/https://cloud.google.com/https://www.bangkokbank.com

https://www.google.com/finance/?authuser=0# PyCharm
https://www.google.com/finance/?authuser=0#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
https://www.google.com/finance/?authuser=0#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
https://www.google.com/finance/?authuser=0#  and can be added to the global gitignore or merged into this file.  For a more nuclear
https://www.google.com/finance/?authuser=0#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
https://www.google.com/finance/?authuser=0#.idea/https://cloud.google.com/https://www.bangkokbank.com
